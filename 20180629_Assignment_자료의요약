
** Python Colabratory 백업 자료입니다. **

2018.06.29 데잇걸즈2 수업 '자료의 요약' 부분에서 다음 개념에 대해 학습했다.

평균
중앙값
사분위수
분산
표준편차
자연로그 함수
상관계수
이 개념들을 파이썬 함수로 계산하려면?


** 데이터 셋이 1개인 경우 **

data = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]


** 중앙값 (= 2사분위수) **

def median(data):
    if int(len(data)) % 2 == 1:                                 # 갯수가 홀수인 경우
        index_median = int((int(len(data)) + 1) / 2)
        median = data[index_median]
    else:                                                       # 갯수가 짝수인 경우
        index1 = int(int(len(data)) / 2) -1
        index2 = int((int(len(data)) / 2) + 1) -1
        median = ((data[index1]) + (data[index2])) / 2
    return median
  

** 사분위수 : interval 부분이 틀린 느낌인데, 고치는 방법을 모르겠다. **

def quartile(data):
    interval = (int(data[-1]) - int(data[0])) / 4
    
    if int(len(data)) % 2 == 1:
        index_median = int((int(len(data)) + 1) / 2)
        median = data[index_median]
    else:
        index1 = int(int(len(data)) / 2) -1
        index2 = int((int(len(data)) / 2) + 1) -1
        median = ((data[index1]) + (data[index2])) / 2    
        
    Q1 = median - interval
    Q2 = median
    Q3 = median + interval

    return Q1, Q2, Q3

  
** 자연로그 함수 (엑셀의 ln 함수) **

import math

data_log = []

def log(data):
    for i in range(len(data)):
        e = round(math.log(data[i]), 4)        # 보기 편하도록 소수점 이하 4자리에서 반올림
        data_log.append(e)
    return data_log


** 분산, 표준편차 (참고 : http://math7.tistory.com/16) **
  
avg = sum(data) / len(data)

def var(data):
    dev_sum = 0

    for i in range(len(data)):
        dev_double = (data[i] - avg) ** 2       # 편차의 제곱을 구해서
        dev_sum = dev_sum + dev_double          # 구해진 편차의 제곱을 모두 합친 후
    
    var = dev_sum / len(data)                   # 편차의 제곱끼리 평균을 구함 (= 분산)
    standard_var = var ** 0.5                   # 분산에 루트를 씌움 (= 표준편차)
    return var, standard_var
    

avg_data = sum(data) / len(data)     # 평균
med_data = median(data)              # 중앙값
quar_data = quartile(data)           # 사분위수 : 틀린듯
natural_log = log(data)              # 자연로그 함수
var = var(data)                      # 분산 & 표준편차

print(avg_data)
print(med_data)
print(quar_data)
print(natural_log)
print(var)


상관계수는 두 개 이상의 데이터 셋이 있을 때 연관도를 측정하는 개념이다. 즉, 데이터 셋이 하나인 경우에는 상관계수라는 개념이 성립하지 않는다.
그렇다면 데이터 셋이 두 개인 경우의 상관계수를 구해보자.


** 데이터 셋이 2개인 경우 **

data1 = [1, 2, 3, 4, 5]
data2 = [8, 7, 6, 4, 5]


** 상관계수 (참고 : http://math7.tistory.com/114) **

avg1 = sum(data1) / len(data1)            # 1번 데이터 셋의 평균        
avg2 = sum(data2) / len(data2)            # 2번 데이터 셋의 평균

def stage1(data1, data2):                 # 분자 부분을 구함
    i = 0
    stage1 = 0
    for i in range(len(data1)):
        num1 = data1[i] - avg1 
        num2 = data2[i] - avg2
        num3 = num1 * num2
        stage1 = stage1 + num3
        i = i + 1
    return stage1

def stage2(data1):                        # 분모 부분을 구하기 위해, 
    i = 0
    stage2 = 0
    for i in range(len(data1)):
        num = (data1[i] - avg1) ** 2      # 1번 데이터 셋의 모든 요소에 대해 편차의 제곱을 구하고
        stage2 = stage2 + num             # 그 편차의 제곱을 모두 더함
        i = i + 1
    return stage2

def stage3(data2):                        # 분모 부분을 구하기 위해,
    i = 0
    stage3 = 0
    for i in range(len(data2)):
        num = (data2[i] - avg2) ** 2      # 2번 데이터 셋도 모든 요소에 대해 편차의 제곱을 구하고
        stage3 = stage3 + num             # 그 편차의 제곱을 모두 더함
        i = i + 1
    return stage3
    
def stage4(data1, data2):                                         # 드디어, 상관계수를 구해보자!
    over = stage1(data1, data2)                                   # 분자는 stage1 함수에서 구해짐
    under = (float(stage2(data1) * stage3(data2))) ** 0.5         # 분모는 각 데이터 셋의 편차의 제곱의 합을 곱하고, 다시 루트('** 0.5' 부분)를 씌워야 함
    coefficient = float(over) / float(under)                      # 분자를 분모로 나누면 상관계수가 구해짐
    return coefficient

coef = stage4(data1, data2)
print(coef)
